spring:
  datasource:
    url: ${DB_PROTOCOL:jdbc:postgresql}://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:travel-notification-service}?serverTimezone=UTC
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
      show-sql: always
  application:
    name: NOTIFICATION-SERVICE
  jackson:
    time-zone: Asia/Ho_Chi_Minh
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
      group-id: ${spring.application.name}-kafka-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
          json.trusted.packages: '*'
          json.use.type.headers: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8181/realms/travel-booking}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8181/realms/travel-booking/protocol/openid-connect/certs}

server:
  port: 8095
  tomcat:
    relaxed-query-chars: '|,{,},[,]'

eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_USERNAME:admin}:${EUREKA_PASSWORD:admin}@${EUREKA_CLIENT_URL:localhost:8761/eureka/}

management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENPOINTS_EXPOSURE:refresh,health,info,env}

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    org:
      springframework:
        web: DEBUG

springdoc:
  api-docs:
    path: /notification-service/v3/api-docs
  swagger-ui:
    path: /notification-service/swagger-ui.html
