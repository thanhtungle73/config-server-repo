spring:
  application:
    name: ACCOUNT-SERVICE
  datasource:
    url: ${DB_PROTOCOL:jdbc:postgresql}://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:travel-account-service}?serverTimezone=UTC
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
      show-sql: always
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8181/realms/travel-booking}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8181/realms/travel-booking/protocol/openid-connect/certs}

jwt:
  auth:
    converter:
      resource-id: ${KEYCLOAK_RESOURCE_ID:travel-booking-client}
      principle-attribute: ${KEYCLOAK_PRINCIPLE_ATTRIBUTE:preferred_username}

keycloak:
  realm: ${KEYCLOAK_REALM:travel-booking}
  server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8181}
  client-id: ${KEYCLOAK_RESOURCE_ID:travel-booking-client}

admin:
  keycloak:
    username: ${KEYCLOAK_ADMIN_USER}
    password: ${KEYCLOAK_ADMIN_USER_PASSWORD}

server:
  port: 8083

eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_USERNAME:admin}:${EUREKA_PASSWORD:admin}@${EUREKA_CLIENT_URL:localhost:8761/eureka/}

management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENPOINTS_EXPOSURE:refresh,health,info,env}

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    org:
      springframework:
        web: DEBUG

springdoc:
  api-docs:
    path: /account-service/v3/api-docs
  swagger-ui:
    path: /account-service/swagger-ui.html
        